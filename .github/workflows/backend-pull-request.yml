name: Backend Pull Request

on:
  pull_request:
    branches: [ "main" ]

jobs:
  setup-backend:
    runs-on: ubuntu-latest

    container:
      image: jhowrf/php8.3-apache:latest

    steps:
      - name: 🔥 Configuring checkout
        uses: actions/checkout@v4

      - name: 📄 Making .env file
        run: |
          echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

      - name: 📦 Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 🛠️ Installing dependencies
        run: composer install

  linter-backend:
    runs-on: ubuntu-latest
    needs: setup-backend

    container:
      image: jhowrf/php8.3-apache:latest

    steps:
      - name: 🔥 Configuring checkout
        uses: actions/checkout@v4

      - name: 📄 Making .env file
        run: |
          echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

      - name: 📦 Restore Composer dependencies cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 👍 Applying permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: ⚡️ Analyzing PHP Code Quality
        run: composer run pint && composer run phpstan

  test-unit-backend:
    runs-on: ubuntu-latest
    needs: setup-backend

    container:
      image: jhowrf/php8.3-apache:latest

    steps:
      - name: 🔥 Configuring checkout
        uses: actions/checkout@v4

      - name: 📄 Making .env file
        run: |
          echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

      - name: 📦 Restore Composer dependencies cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 👍 Applying permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: ⚡️ Executing PHP Unit tests
        run: composer run test:unit

  test-feature-backend:
    runs-on: ubuntu-latest
    needs: setup-backend
    container:
      image: jhowrf/php8.3-apache:latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 33306:3306
        env:
          MYSQL_ROOT_PASSWORD: 123
          MYSQL_DATABASE: my_finances_testing
        options:
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 🔥 Configuring checkout
        uses: actions/checkout@v4

      - name: 📄 Making .env file
        run: |
          echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

      - name: 📦 Restore Composer dependencies cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 🛠 Setup Runner Database
        run: |
          php artisan migrate --database=mysql_testing --force

      - name: 👍 Applying permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: ⚡️ Executing PHP Feature tests
        run: composer run test:feature
