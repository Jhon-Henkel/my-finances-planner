name: Backend Pull Request

on:
  pull_request:
    branches: [ "main" ]

jobs:
  linter-backend:
    runs-on: ubuntu-latest

    container:
      image: jhowrf/php8.3-apache:latest

    steps:
      - name: 🔥 Configuring checkout
        uses: actions/checkout@v4

      - name: 📄 Making .env file
        run: |
          echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

      - name: 🛠️ Installing dependencies
        run: composer install

      - name: 👍 Applying permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: ⚡️ Analyzing PHP Code Quality
        run: composer run pint && composer run phpstan

  test-unit-backend:
    runs-on: ubuntu-latest

    container:
      image: jhowrf/php8.3-apache:latest

    steps:
      - name: 🔥 Configuring checkout
        uses: actions/checkout@v4

      - name: 📄 Making .env file
        run: |
          echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

      - name: 🛠️ Installing dependencies
        run: composer install

      - name: 👍 Applying permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: ⚡️ Executing PHP Unit tests
        run: composer run test:unit

  test-feature-backend:
    runs-on: ubuntu-latest

    container:
      image: jhowrf/php8.3-apache:latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 33306:3306
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: 123
          MYSQL_USER: testing
          MYSQL_PASSWORD: 123
        options:
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 🔥 Configuring checkout
        uses: actions/checkout@v4

      - name: 📄 Making .env file
        run: |
          echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

      - name: 🛠️ Installing dependencies
        run: composer install

      - name: 🛠 Setup Runner Database
        run: |
          php artisan migrate --database=mysql_testing --force
          php artisan create:user --test-suit=true
          php artisan migrate:all-tenants

      - name: 👍 Applying permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: 🔧 Installing MySQL Client
        run: apt-get update && apt-get install -y mysql-client

      - name: 📥 Importing SQL file
        run: mysql -h 127.0.0.1 -P 33306 -u testing -p123 testing < ./config/docker/develop/database/github-pipeline-test.sql

      - name: ⚡️ Executing PHP Feature tests
        run: composer run test:feature
