name: Main Branch Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  back-end-coverage:
    runs-on: ubuntu-latest

    container:
      image: jhowrf/php-image:latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 33306:3306
        env:
          MYSQL_ROOT_PASSWORD: 123
          MYSQL_DATABASE: my_finances_testing
        options:
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: 🔥 Configuring checkout V3
      uses: actions/checkout@v3

    - name: 📄 Making .env file
      run: |
        echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

    - name: 🛠️ Installing dependencies
      run: composer install

    - name: 🛠 Setup Runner Database
      run: |
        php artisan migrate --database=mysql_testing --force

    - name: 👍 Applying permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: ⚡️ Executing PHP test coverage
      run: composer run test:coverage

    - name: 🏷 Making coverage badge
      uses: timkrase/phpunit-coverage-badge@v1.2.1
      with:
        coverage_badge_path: output/coverage-backend.svg
        push_badge: false

    - name: 💡️Uploading coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./clover.xml
        flags: backend
        name: Backend Test

  front-end-coverage:
    runs-on: ubuntu-latest

    container:
      image: jhowrf/php-image:latest

    steps:
      - name: 🔥 Configuring checkout V3
        uses: actions/checkout@v3

      - name: 🛠️ Installing Node dependencies
        run: npm install

      - name: ⚡️ Executing Vitest tests
        run: LARAVEL_BYPASS_ENV_CHECK=1 npm run test:coverage

      - name: 📄 Moving coverage to workspace folder
        run: mv ./tests/frontend/coverage/clover.xml ./clover.xml

      - name: 🏷 Making coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage-frontend.svg
          push_badge: false

      - name: 💡️Uploading coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./clover.xml
          flags: frontend
          name: Frontend Test

  private-server-deploy:
    runs-on: ubuntu-latest

    container:
      image: jhowrf/php-image:latest

    steps:
      - name: 🔥 Configuring checkout V3
        uses: actions/checkout@v3

      - name: 🛠️ Installing Node dependencies
        run: npm install

      - name: 📄 Making .env
        run: |
          echo "${{ secrets.ENV_MFP_PERSONAL }}" > .env

      - name: 📦️ Building application
        run: npm run build

      - name: 📂 Upload files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_ADDRESS }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./public/build/
          server-dir: ./projects/my-finances-planner/public/build/
          dangerous-clean-slate: true

      - name: 👍 Notifying deploy to Honeybadger
        uses: honeybadger-io/github-notify-deploy-action@v1
        with:
          api_key: ${{ secrets.PERSONAL_HONEYBADGER_KEY }}

  demo-server-deploy:
    runs-on: ubuntu-latest

    container:
      image: jhowrf/php-image:latest

    steps:
      - name: 🔥 Configuring checkout V3
        uses: actions/checkout@v3

      - name: 🛠️ Installing Node dependencies
        run: npm install

      - name: 📄 Making .env
        run: |
          echo "${{ secrets.ENV_MFP_DEMO }}" > .env

      - name: 📦 Building application
        run: npm run build

      - name: 📂 Upload files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_ADDRESS }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./public/build/
          server-dir: ./projects/my-finances-planner-demo/public/build/
          dangerous-clean-slate: true

      - name: 👍 Notifying deploy to Honeybadger
        uses: honeybadger-io/github-notify-deploy-action@v1
        with:
          api_key: ${{ secrets.DEMO_HONEYBADGER_KEY }}
